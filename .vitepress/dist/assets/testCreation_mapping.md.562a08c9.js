import{_ as e,o as a,c as t,Q as s}from"./chunks/framework.a9d1f0e8.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"testCreation/mapping.md","filePath":"testCreation/mapping.md"}'),n={name:"testCreation/mapping.md"},o=s(`<p>The configuration file <em>(twizzar.config)</em> serves as a central configuration for mapping configurations and various other settings. Its primary purpose is to define mappings between &quot;Member Under Test&quot; (MUT) and corresponding &quot;Test Methods&quot; for automated unit test creation. Additionally, it specifies NuGet packages to be included in newly created projects.</p><h3 id="mapping-configurations" tabindex="-1">Mapping Configurations <a class="header-anchor" href="#mapping-configurations" aria-label="Permalink to &quot;Mapping Configurations&quot;">​</a></h3><p>The mapping configurations define how MUTs are associated with their corresponding Test Methods. These mappings use placeholders enclosed in <code>$</code> symbols that will be dynamically replaced during the automated creation of unit tests. Below are some important details about mapping configurations:</p><h4 id="usage-notes" tabindex="-1">Usage Notes <a class="header-anchor" href="#usage-notes" aria-label="Permalink to &quot;Usage Notes&quot;">​</a></h4><ul><li>All paths within this configuration file use forward slashes (<code>/</code>) as the directory separator.</li><li>Variables enclosed in <code>$</code> symbols will be automatically populated by the Addin based on the context.</li><li>A mapping can have multiple pattern matches, separated by a newline, but the first match encountered will be used.</li><li>The syntax for a mapping is as follows: <code>&lt;pattern&gt; : &lt;replacement&gt;</code><ul><li>The pattern can contain wildcards (<code>*</code>), which correspond to any number of characters (greedy matching).</li><li>The replacement can contain back-references (<code>$1</code>, <code>$2</code>, etc.), which correspond to wildcard matches.</li><li>Both the pattern and replacement can contain variables enclosed in <code>$</code> symbols.</li></ul></li><li>To map everything to a given replacement, use the following syntax: <code>&lt;replacement&gt;</code>, this is the same as: <code>* : &lt;replacement&gt;</code>. This is useful for providing a default after other pattern matches.</li></ul><h4 id="available-variables" tabindex="-1">Available Variables <a class="header-anchor" href="#available-variables" aria-label="Permalink to &quot;Available Variables&quot;">​</a></h4><p>The following variables are available for use in mapping configurations:</p><ul><li><code>$solutionPath$</code>: The absolute path to the solution directory.</li><li><code>$projectUnderTest$</code>: The name of the project under test.</li><li><code>$fileUnderTest$</code>: The name of the file under test (without the file extension).</li><li><code>$namespaceUnderTest$</code>: The namespace of the class under test.</li><li><code>$typeUnderTest$</code>: The name of the class under test.</li><li><code>$memberUnderTest$</code>: The name of the member under test.</li></ul><h4 id="sample-mappings" tabindex="-1">Sample Mappings <a class="header-anchor" href="#sample-mappings" aria-label="Permalink to &quot;Sample Mappings&quot;">​</a></h4><p>Here are some sample mappings for different aspects of unit testing:</p><h5 id="mapping-from-the-source-project-name-to-the-test-project-name" tabindex="-1">Mapping from the source project name to the test project name. <a class="header-anchor" href="#mapping-from-the-source-project-name-to-the-test-project-name" aria-label="Permalink to &quot;Mapping from the source project name to the test project name.&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testProject:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$projectUnderTest$.Tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testProject:]</span></span>
<span class="line"><span style="color:#24292e;">$projectUnderTest$.Tests</span></span></code></pre></div><h5 id="mapping-from-the-source-project-path-to-the-test-project-path-absolute-path-to-the-project-directory" tabindex="-1">Mapping from the source project path to the test project path (absolute path to the project directory). <a class="header-anchor" href="#mapping-from-the-source-project-path-to-the-test-project-path-absolute-path-to-the-project-directory" aria-label="Permalink to &quot;Mapping from the source project path to the test project path (absolute path to the project directory).&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testProjectPath:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$solutionPath$/$projectUnderTest$.Tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testProjectPath:]</span></span>
<span class="line"><span style="color:#24292e;">$solutionPath$/$projectUnderTest$.Tests</span></span></code></pre></div><h5 id="mapping-from-the-source-file-name-to-the-test-file-name-without-path-and-extension" tabindex="-1">Mapping from the source file name to the test file name (without path and extension). <a class="header-anchor" href="#mapping-from-the-source-file-name-to-the-test-file-name-without-path-and-extension" aria-label="Permalink to &quot;Mapping from the source file name to the test file name (without path and extension).&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testFile:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$fileUnderTest$.Tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testFile:]</span></span>
<span class="line"><span style="color:#24292e;">$fileUnderTest$.Tests</span></span></code></pre></div><h5 id="mapping-from-the-source-file-path-to-the-test-file-path-relative-path-to-the-test-file-directory" tabindex="-1">Mapping from the source file path to the test file path (relative path to the test file directory). <a class="header-anchor" href="#mapping-from-the-source-file-path-to-the-test-file-path-relative-path-to-the-test-file-directory" aria-label="Permalink to &quot;Mapping from the source file path to the test file path (relative path to the test file directory).&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testFilePath:]</span></span>
<span class="line"><span style="color:#e1e4e8;">* : $1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testFilePath:]</span></span>
<span class="line"><span style="color:#24292e;">* : $1</span></span></code></pre></div><h5 id="mapping-from-the-source-namespace-to-the-test-namespace" tabindex="-1">Mapping from the source namespace to the test namespace. <a class="header-anchor" href="#mapping-from-the-source-namespace-to-the-test-namespace" aria-label="Permalink to &quot;Mapping from the source namespace to the test namespace.&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testNamespace:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$namespaceUnderTest$.Tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testNamespace:]</span></span>
<span class="line"><span style="color:#24292e;">$namespaceUnderTest$.Tests</span></span></code></pre></div><h5 id="mapping-from-the-source-class-name-to-the-test-class-name" tabindex="-1">Mapping from the source class name to the test class name. <a class="header-anchor" href="#mapping-from-the-source-class-name-to-the-test-class-name" aria-label="Permalink to &quot;Mapping from the source class name to the test class name.&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testClass:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$typeUnderTest$Tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testClass:]</span></span>
<span class="line"><span style="color:#24292e;">$typeUnderTest$Tests</span></span></code></pre></div><h5 id="mapping-from-the-source-method-name-to-the-test-method-name" tabindex="-1">Mapping from the source method name to the test method name. <a class="header-anchor" href="#mapping-from-the-source-method-name-to-the-test-method-name" aria-label="Permalink to &quot;Mapping from the source method name to the test method name.&quot;">​</a></h5><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[testMethod:]</span></span>
<span class="line"><span style="color:#e1e4e8;">$memberUnderTest$_Scenario_ExpectedBehavior</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[testMethod:]</span></span>
<span class="line"><span style="color:#24292e;">$memberUnderTest$_Scenario_ExpectedBehavior</span></span></code></pre></div><h3 id="additional-configurations" tabindex="-1">Additional Configurations <a class="header-anchor" href="#additional-configurations" aria-label="Permalink to &quot;Additional Configurations&quot;">​</a></h3><p>In addition to mapping configurations, this configuration file also contains settings for NuGet packages to install when a new project is created. These packages are specified in the <code>[nugetPackages:]</code> section, with each package listed on a separate line. You can specify the package ID and version if needed, or just the package ID for the latest stable version.</p><h4 id="sample-nuget-packages" tabindex="-1">Sample NuGet Packages <a class="header-anchor" href="#sample-nuget-packages" aria-label="Permalink to &quot;Sample NuGet Packages&quot;">​</a></h4><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[nugetPackages:]</span></span>
<span class="line"><span style="color:#e1e4e8;">Twizzar.Api</span></span>
<span class="line"><span style="color:#e1e4e8;">NUnit</span></span>
<span class="line"><span style="color:#e1e4e8;">NUnit3TestAdapter</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[nugetPackages:]</span></span>
<span class="line"><span style="color:#24292e;">Twizzar.Api</span></span>
<span class="line"><span style="color:#24292e;">NUnit</span></span>
<span class="line"><span style="color:#24292e;">NUnit3TestAdapter</span></span></code></pre></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Example templates are located in the example source:</p><ul><li><a href="https://github.com/Twizzar/Twizzar/blob/main/defaultConfigs/NUnit/twizzar.config" target="_blank" rel="noreferrer">nunit</a></li><li><a href="https://github.com/Twizzar/Twizzar/blob/main/defaultConfigs/XUnit/twizzar.config" target="_blank" rel="noreferrer">xunit</a></li><li><a href="https://github.com/Twizzar/Twizzar/blob/main/defaultConfigs/MSTest/twizzar.config" target="_blank" rel="noreferrer">mstest</a></li></ul>`,31),i=[o];function p(l,r,c,h,d,m){return a(),t("div",null,i)}const f=e(n,[["render",p]]);export{g as __pageData,f as default};
