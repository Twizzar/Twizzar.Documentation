import{_ as e,o as s,c as a,Q as t}from"./chunks/framework.a9d1f0e8.js";const f=JSON.parse('{"title":"Default behavior","description":"","frontmatter":{},"headers":[],"relativePath":"default-behavior.md","filePath":"default-behavior.md"}'),o={name:"default-behavior.md"},l=t(`<h1 id="default-behavior" tabindex="-1">Default behavior <a class="header-anchor" href="#default-behavior" aria-label="Permalink to &quot;Default behavior&quot;">​</a></h1><p>If a member is not configured, the default behavior will be applied. The default behavior is defined different for the requested type:</p><h2 id="basic-types" tabindex="-1">Basic types <a class="header-anchor" href="#basic-types" aria-label="Permalink to &quot;Basic types&quot;">​</a></h2><p>Unique will be used see <a href="./basic-types.html">Basic types</a>.</p><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><p>For all interfaces a defaukt <a href="https://github.com/moq/moq4" target="_blank" rel="noreferrer">Mock object</a> is created. This means:</p><ul><li>All Properties and Methods will return the default value (<code>default(T)</code>)</li></ul><h2 id="structs-classes-and-records" tabindex="-1">Structs, classes and records <a class="header-anchor" href="#structs-classes-and-records" aria-label="Permalink to &quot;Structs, classes and records&quot;">​</a></h2><p>The greatest constructor will be used and all its parameter will be resolved with the default behavior. This means the dependecy will be resolved recursively till a basic type or a interface is reached.</p><details>   <summary>Definition of the greatest constructor</summary>     <blockquote>The greatest constructor is defined as the constructor with the most parameters. When there are more than one constructor with max parameters, then one is selected over a hash function by Twizzar. The selection is arbitrary but deterministic. This always means the same constructor is selected.     </blockquote></details><h1 id="override-the-default-behavior" tabindex="-1">Override the Default behavior <a class="header-anchor" href="#override-the-default-behavior" aria-label="Permalink to &quot;Override the Default behavior&quot;">​</a></h1><p>The default behavior can be overridden by configuring the member. There are two way to configure the member:</p><ul><li>In a CustomBuilder per code or per Twizzar UI</li><li>In the Unit test in the <code>With</code> Method</li></ul><p>The configuration in the Unit Test is the strongest and will override all other, and the default behavior is the weakest.</p><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">flowchart</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LR</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">cb</span><span style="color:#F97583;">(</span><span style="color:#9ECBFF;">Custom Builder</span><span style="color:#F97583;">)</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">--</span><span style="color:#9ECBFF;"> overrides </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">sd</span><span style="color:#F97583;">(</span><span style="color:#9ECBFF;">System Default</span><span style="color:#F97583;">)</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">ut</span><span style="color:#F97583;">(</span><span style="color:#9ECBFF;">Unit Test</span><span style="color:#F97583;">)</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">--</span><span style="color:#9ECBFF;"> overrides </span><span style="color:#F97583;">--&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">cb</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">flowchart</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LR</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">cb</span><span style="color:#D73A49;">(</span><span style="color:#032F62;">Custom Builder</span><span style="color:#D73A49;">)</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">--</span><span style="color:#032F62;"> overrides </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">sd</span><span style="color:#D73A49;">(</span><span style="color:#032F62;">System Default</span><span style="color:#D73A49;">)</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">ut</span><span style="color:#D73A49;">(</span><span style="color:#032F62;">Unit Test</span><span style="color:#D73A49;">)</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">--</span><span style="color:#032F62;"> overrides </span><span style="color:#D73A49;">--&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">cb</span><span style="color:#24292E;">;</span></span></code></pre></div>`,15),n=[l];function r(p,c,i,d,h,u){return s(),a("div",null,n)}const b=e(o,[["render",r]]);export{f as __pageData,b as default};
